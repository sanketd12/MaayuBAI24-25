{
    "certifications": [],
    "education": {
        "institution": "Saint peters University, Jersey City, New Jersey USA",
        "degree": "Masters in Marketing Science",
        "graduation": "NA",
        "gpa": null,
        "courses": []
    },
    "experiences": [
        {
            "company": "Comcast, PA",
            "role": "Sr. Full Stack Java Developer",
            "dates": [
                "Mar 2022 to Present"
            ],
            "responsibilities": [
                "Involved in various phases of the Software Development Life Cycle (SDLC), encompassing requirements gathering, modeling, analysis, design, development, and testing. Collaborate closely with UI designers and the User Experience team to establish screen designs. Develop Angular partials based on UI screens, ensuring a cohesive user interface. Leverage various Angular 7 custom directives, crafting reusable components and templates that are utilized across different sections of the application. Create AWS stacks from scratch and maintain Terraform updates according to the organization's evolving needs. Develop the server-side application that interacts with the database using Spring Boot and Hibernate, ensuring efficient data management. Implement jQuery and Node.js to add dynamic functionality to the application, enhancing user interactions. Implement REST Microservices using Spring Boot, employing Spring AOP and Spring Actuator to generate detailed metrics and achieve persistence. Create Behavior-Driven Development (BDD) tests using Cucumber. Implement Spring MVC architecture, promoting modularity through Spring AOP's cross-cutting concern separation. Implement REST Web services for backend operations, utilizing Couchbase DB (NoSQL) for database services. Utilize Kubernetes as the runtime environment for the CI/CD system, facilitating streamlined build, test, and deployment processes. Develop an AWS Lambda & RDS function. Orchestrate microservices builds within Jenkins pipelines. Integrate Microservices into the existing system architecture using Clojure. Implement Java APIs specifically tailored for Amazon Lambda, enabling efficient management of certain AWS services. Implement modules into Node JS, ensuring seamless integration with design requirements. Employ a Micro Services architecture that utilizes Spring Boot-predicated services. Interact through a combination of REST, Cassandra, and MQ message brokers, facilitating the development, testing, and deployment of Identity microservices. Create and manage MongoDB/NoSQL collections. Develop server-side automation using Node.js scripting, connecting various types of SQL and NoSQL stores for efficient data handling. Environment: Java 1.8, JSP, Spring, AWS, Bootstrap, JavaScript, Oracle 11g/12c, Angular JS 7/8, Typescript, Restful, jQuery, Hibernate, PostgreSQL, JPA, Micro Services, Apache Camel, PL/SQL, Docker, Cassandra DB, Junit."
            ]
        },
        {
            "company": "CVS Caremark, RI",
            "role": "Sr. Full Stack Java Developer",
            "dates": [
                "Apr 2020 – Feb 2022"
            ],
            "responsibilities": [
                "Involved in various stages of deliverables of the project using the AGILE Software development methodology. Designed and developed of web-based application using Java 1.8, Spring, SQL. Responsible for developing the application using Angular 7/8, Node JS, Typescript, JSP, CSS3, HTML 5, jQuery, Bootstrap, Struts and JavaScript. Worked with NPM commands and using package. JSON for managing dependencies and dev-dependencies of Node.js applications. Designed and developed the application using agile methodology and followed Test Driven Development (TDD), Scrum. Implemented Service oriented architecture (SOA) and OOP concepts using Web Services like SOAP, REST services. Used NodeJS mainly used for authentication, authorization and session maintenance. Developed high Quality RESTful services with best practices using REST APIs and Spring Boot for Micro Services architecture. Developed single page application by using Covalent open-source framework, which is built on Angular 7/8. Build REST web service by building Node JS Server in the back-end to handle requests sent from the front-end jQuery Ajax calls. Used Multithreading concept to post data from files to tables involving transformation of file in different formats. Defined file structure for Angular JS files based in Angular IO documentation. Experience in using Angular JS components, Forms, Events, Keys, Router, Redux, Animations and Flux. Developed the application using Java 1.8 and implemented its features like Lambdas Expressions, Time API, Streams, functional interfaces, collectors, default methods, type interfaces, for each. Used Java 1.8 features such as Lambda Expressions to make the code concise and Stream API to increase the performance and manage some of the AWS Services. Worked with NoSQL Cassandra to store, retrieve, and update and manage all the details for Ethernet provisioning and customer order tracking. Development of front-end application using Angular, Dependency injection and Http modules with Node JS server for future evolutions. Developed Apache Camel endpoints and used producer template to route messages to JMS queues. Integrated Spring Dependency Injection (IOC) among different layers of an application. Design and developed a data migration strategy and source to target mapping to migrate the data out of the legacy systems into the Cassandra customer DB. Used Angular 7 we created custom directives for re-usable components (multi-field form elements, background file uploads, etc.). Used Amazon Cloud Watch to monitor AWS services and Amazon Cloud Watch logs to monitor application. Developed various helper classes needed following Core Java multi-threaded programming and Collection classes. Assisted in development and maintenance of new APIs for integration with Restful web services. Used object storage container to store the secured files and retrieved from API by using Amazon web services (AWS). Support business service leads, architects, and designers in their delivery of SOA components. Secured the API's by implementing Oauth2 token-based authentication using spring security. Designed and processed JSON requests according to different types of modules, actions & request data and responses accordingly to send it back to front end after the logic processing. Deployed Spring boot based Micro Services, Docker container using Amazon EC2 container services and using AWS admin console. Used Angular 7 framework where data from backend is stored in model and populated it to UI. Developed and used Postgres functions and Stored Procedures to perform operations on Postgres SQL. Developed user interfaces for policy owner module using JSPs, Struts Tag Library, and Tiles. Wrote numerous session and message driven beans for operation on JBoss and Web Logic, Apache Tomcat Server was used to deploy the application. Expertise in designing test cases for unit testing applications using Junit5 and Cucumber. Used ANT build scripts to build the war file and deployed war on tomcat app server."
            ]
        },
        {
            "company": "Barclays, NJ",
            "role": "Sr. Java Developer/ J2EE Developer",
            "dates": [
                "Apr 2019 – Mar 2020"
            ],
            "responsibilities": [
                "Design and development applications using Rational Unified Process (RUP), UML and OOAD and created Use Cases, Class Diagrams, Sequence Diagrams using Rational Rose. Designed and developed web-based software using Spring MVC Framework and Spring Web Flow. Developed JSP, HTML, CSS and a part of presentation layer using JavaScript, Angular 6 and React JS. Deployed application updates to AWS EC2 and monitored the load balancing of different instances and used AWS IAM for access management. Followed TDD Test Driven Development and developed test cases by using JUnit for unit testing for each and every module developed. Core Java development and Support of Java/J2EE applications with emphasis on OOP-based web forms, business logic, database access components. Using Azure Functions to integrate applications and run backend processes according to schedules without provisioning/managing servers. Used Multi-threading to handle REDIS cluster failover between local and remote data centers. Working on development of platform for multi tenants built in Java (Spring Boot) and Angular JS/React. Design and development of many PL/SQL batches using JAVA with connectivity to Oracle for data maintenance and handling. Used new Java 8 features, such as Lambda expressions, Streams and Functional Interfaces. Handled client validations, slide show, hide and show controls, dropdown menus and tab navigation using JQuery. Implemented the web services client to consume the third party service API for validating credit cards. Implemented Collections Framework for fetching and appending string from the deployed UI. Involved in writing API for Amazon Lambda to manage some of the AWS Services. With the concept of ReactJs Worked on usage metrics and also end to end events tracing for analysis purpose. Developed UI using HTML5, CSS3, JSP, JavaScript, Angular 6 and Bootstrap. Worked on Configuration of Internal load balancer, load balanced sets and Azure Traffic manager. Created Directives, Services, Filters using Angular 6 with Typescript. Created Typescript reusable components and services to consume REST API's using Component based architecture provided by Angular 6. Involved in hands on programming on the core application development using multithreading that combines Hibernate and Spring. Managing Product development / implementation using Azure cloud infrastructure. Implemented JMS for sending the messages to RabbitMQ queues and supporting, troubleshooting RabbitMQ related issues and used RabbitMQ to communicate with controller and for business logic. Involved in working on Cassandra database to analyze how the data get stored. Development of MQ application programs for Java JMS environments using queues and messages. Designed and created Cassandra tables as data repository to host transactions and implemented Kafka consumers move transaction data from Kafka to Cassandra. Exposure and built applications using React JS with ES6 which allowed us to render pages on both the client and server using the same codebase. Implemented Azure Application Insights to store user activities and error logging. Developed/Maintained relational database hosted on PostgreSQL, accessed by Java programs. Implemented business logic in middle tier using pluggable components, which were specified in the customized xml documents using Spring Framework. Extensively used AWS to integration with Enterprise and web applications. Persistence layer implemented using Hibernate framework. Performed client side and Server-side validations using Struts validations. Created Action Form beans and performed validation by configuring the Struts Validator. Utilized Kubernetes for the runtime environment of the CI/CD system to build, test deploy. Developed Apache Camel routes and defined JMS endpoints for message processing and routing. Implemented business logic in Middle Tier using pluggable components, which were specified in the customized xml documents using Spring Framework. Used React JS to create views to hook up models to the DOM and synchronize data with server as a Single Page Application (SPA) and React-Redux to make REST API calls. Wrote Restful Web Services to communicate with MongoDB. Used Jenkins for continuous delivery by enabling deployment into several environment. Used SOAP based web services to develop interfaces to integrate between front end systems and back end systems. Designed and documented REST/HTTP API’s including JSON data formats and API versioning strategy. Implemented Test Driven Development (TDD) for developing and testing the application. Used Java Message Service (JMS) for reliable and asynchronous exchange of important information such as loan status report between the clients and the bank. Deployed Spring Boot based Microservices in Docker and Amazon EC2 container using Jenkins. Involved in complete Agile/SDLC Requirement Analysis, Development, System and Integration testing. Used Log4J to capture the log that includes runtime exceptions. Used Clear Case for source code maintenance."
            ]
        },
        {
            "company": "CIGNITI Pvt Ltd Hyderabad India",
            "role": "Java Developer",
            "dates": [
                "Sep 2016 – Jul 2018"
            ],
            "responsibilities": [
                "Involved in Requirements gathering, Analysis, Design, Development and Testing of the application using AGILE methodology (SCRUM). Developed the web interface using HTML5, CSS3, JavaScript, jQuery, React JS & Node JS. Designed Java Components and integrated using spring framework with Hibernate Object/Relational persistence mechanism. Worked on custom libraries for business layer using Object oriented programming (OOP). Used Angular Http services to perform backend REST webservices interactions to get and post JSON data. Experience in Message Oriented Middleware implementation using JMS and Apache Kafka. Developed JMS Sender and Receivers for the loose coupling between the other modules and Implemented asynchronous request processing using Message Driven Bean. Migrated existing on-premise infrastructure into cloud using Azure and its associated Services. Designed and coded the J2SE solver, used to solve differential equations for the multithreaded simulation. Developed UI automation for Node JS based web applications using Selenium Web Driver developed in Node JS. Having good experience in implementing the Node.js server-side code to interact with MongoDB to store and retrieve data by using the Mongoose drivers. Developing Micro Services leveraging in an Azure cloud environment. Designed, developed a custom, single-page, responsive web application on front end using Angular 2. Working with React Router for developing Single Page Applications SPAs and Implemented React JS code to handle cross browser compatibility issues. Worked with NPM commands and using package. JSON for managing dependencies and dev-dependencies of Node.js applications. Designed and developed Customer Lookup tool which is helping customer in expediting Azure outage assessment and end-customer communication workflow. Implemented custom Directives and structural Directives using Angular 2 and developed code on Typescript and implemented Angular 2 Components. Worked with NoSQL database MongoDB and created pipeline from MongoDB Cluster. Worked with java libraries to access AWS facilities as Simple Storage and Simple queue service and Couchbase DB. Used Node.js for server-side code and React JS as the framework. Written callback functions for the Restful API. Implemented the application using Spring IOC, Spring MVC Framework, and Spring Batch and handled the security using Spring Security. Worked on Azure Resource Manager (ARM) that provides security, auditing, and tagging features to help you manage your resources after deployment. Used design specifications & Developed communication between Client and server using Multi-Threading. Worked on NoSQL database like MongoDB as data storage and utilized aspects like replica sets, sharing and clever document design to make service extensible scale and feature wise. Ran Log aggregations, website Activity tracking and commit log for distributed system using Apache Kafka. Deployed the Docker image of services building Docker file and build a continuous delivery pipeline for containers using AWS Code Pipeline and Amazon ECS. Added the required jars to the drools files, build the package and deployed it on the JBoss server. Developed server-side software modules and client-side user interface components deployed entirely in Compute Cloud of Amazon web Services (AWS). Involved in using React JS components Forms, Events, Keys, Router, Animations and Flux. Designed and developed DAO layer with Hibernate standards, to access data from SQL Server. Worked on setting up Maven scripts to build, package, and deploy application code to the target Apache Tomcat Servers and worked on continuous integration servers like Jenkins. Configured Jenkins in Micro Service apps for deploying and implemented Jenkins for the central build. Used GIT as source control management giving a huge speed advantage on centralized systems that must communicate with a server. Worked with Jenkins under the CI/CD pipeline providing continuous improvement to agile software development. Used Clear Case for source code maintenance."
            ]
        },
        {
            "company": "WallTech Software Solutions, India",
            "role": "Jr. Java Developer",
            "dates": [
                "May 2012 – Aug 2016"
            ],
            "responsibilities": [
                "Involved in writing technical document Analysis, Design, Development, Integration and Testing of modules & Developed this application based on the Agile Development practices. Collaborated with Business Analysts during design specifications & Developed communication between Client and server using Multi-Threading. Created stored procedures, triggers and different joins for database using SQL scripts & Used SOAP based web services (JAX-WS, JAXP-RPC, and JAXB) to communicate across different systems and worked with SOAP UI for analyzing and debugging requests/responses & Developed JUnit test classes for testing the modules. Developed presentation layer using JSP, HTML, CSS, AJAX, JavaScript, jQuery and Apache Wicket & Implemented IPC Message queues for communication between servers & Involved in designing Activity Diagrams, Sequence diagram and Class diagram using rational rose UML tool. Used Micro Services architecture, with Spring Boot-predicated services interacting through an amalgamation of REST, Swagger, Cassandra and MQ message brokers and leveraging Spring Boot. Developed light weight business component and integrated applications using Spring framework, Spring web MVC using features like IOC and configuring application context for spring bean factory. Implemented java multithreading to process Image download applications. Used Micro Services architecture, with Spring Boot-based services interacting through a combination of REST and Spring Boot. Wrote the front-end look and appearance for the screens using Java, Core Java, NO SQL, AWS, Bootstrap, Node JS, JavaScript, AJAX, and jQuery. Deployed the Spring Batch application on Pivotal Cloud Foundry (PCF) instance and bind the services like Java and PostgreSQL services. Used config-server options of PCF for maintaining application properties pertaining to each environment and User-Provided-Config-Server (cf cups) option for Syslog and Oracle DB connectivity. Used XML and JSON for transferring/retrieving data between different Applications and Used MongoDB database high availability concepts with data replication, for the failover design. Deployed the project into Heroku using GIT version control system and Worked on a large scale distributed computing environment, monitoring data nodes to prioritize jobs for processing functions."
            ]
        }
    ],
    "projects": [],
    "honors": [],
    "activities": [],
    "userDetails": {
        "name": "Feichin",
        "skills": [
            "Java",
            "C++",
            "SQL and PL/SQL",
            "JSE, JDBC, JPA, AJAX, JSP, Servlets, EJB, JMS, JSTL, JNDI",
            "HTML5, CSS3, JavaScript, Angular 2/4/6/7/8, Node.js, React JS, Bootstrap, XML, XSD, XSL/XSLT, AJAX, jQuery, JSON, Typescript",
            "REST, SOAP, WSDL, SAAJ, SAXJ, RESTful, AWS, Microservices, JAXB, Apache-CXF",
            "Hibernate, iBatis, MyBatis",
            "WebLogic, Web Sphere, Oracle Glassfish, Wildly, Jboss, Apache Tomcat",
            "Struts, JSF, Spring Framework, Spring MVC, Spring Boot, Spring Cloud, Spring Batch, Spring Core, Spring Hibernate, Spring JDBC, Spring Security",
            "Oracle, MySQL and SQL Server, MongoDB, Cassandra",
            "Windows, Linux and Solaris",
            "NetBeans, Eclipse, IntelliJ, RAD",
            "CVS, SVN, Bamboo, GIT",
            "JUnit, Log4J, DOM",
            "ANT, Maven, Gradle, Jenkins, Jira, Rally, Ansible, puppet",
            "AWS (Elastic Search, EC2, S3, EMI, ELB, Dynamo DB), Docker, Azure, PCF",
            "Java 1.8, JSP, Spring, AWS, Bootstrap, JavaScript, Oracle 11g/12c, Angular JS 7/8, Typescript, Restful, jQuery, Hibernate, PostgreSQL, JPA, Micro Services, Apache Camel, PL/SQL, Docker, Cassandra DB, Junit"
        ]
    }
}